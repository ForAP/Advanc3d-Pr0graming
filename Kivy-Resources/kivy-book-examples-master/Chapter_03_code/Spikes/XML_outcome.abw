<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="79" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="3.0.0" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:en-AU; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.date_last_changed">Thu Apr  9 06:44:35 2015
</m>
<m key="abiword.generator">AbiWord</m>
<m key="dc.creator">Robert Merkel</m>
<m key="dc.date">Thu Apr  9 06:44:35 2015
</m>
<m key="dc.format">application/x-abiword</m>
<m key="dc.publisher">Monash Uni</m>
</metadata>
<rdf>
</rdf>
<history version="1" edit-time="4362" last-saved="1428525875" uid="e956cede-de25-11e4-9230-a2d24bac1c2a">
<version id="1" started="1428525875" uid="10d490d6-de30-11e4-9230-a2d24bac1c2a" auto="0" top-xid="79"/>
</history>
<styles>
<s type="P" name="Normal" followedby="Normal" props="text-indent:0in; orphans:0; margin-top:0pt; margin-left:0pt; font-stretch:normal; line-height:1.0; text-align:left; bgcolor:transparent; lang:en-AU; dom-dir:ltr; margin-bottom:0pt; font-weight:normal; text-decoration:none; font-variant:normal; color:000000; text-position:normal; font-size:10pt; margin-right:0pt; font-style:normal; widows:0; font-family:Gentium"/>
<s type="P" name="Body Text" basedon="Normal" followedby="Body Text" props="font-family:Gentium; font-size:10pt; dom-dir:ltr; margin-bottom:6pt; lang:en-AU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Caption" basedon="Normal" followedby="Caption" props="font-family:Gentium; dom-dir:ltr; font-style:italic; margin-top:6pt; lang:en-AU; text-align:left; orphans:0; widows:0; margin-bottom:6pt; line-height:1.0; font-size:12pt"/>
<s type="P" name="Footer" basedon="Normal" followedby="Footer" props="font-family:Gentium; font-size:10pt; tabstops:2.8840in/C,5.7681in/C; dom-dir:ltr; lang:en-AU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Header" basedon="Normal" followedby="Header" props="font-family:Gentium; font-size:10pt; tabstops:3.0000in/C,6.0000in/C; dom-dir:ltr; lang:en-AU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Heading" basedon="Normal" followedby="Body Text" props="font-family:Arial; dom-dir:ltr; margin-top:12pt; lang:en-AU; text-align:left; orphans:0; keep-with-next:yes; widows:0; margin-bottom:6pt; line-height:1.0; font-size:14pt"/>
<s type="P" name="Index" basedon="Normal" followedby="Index" props="font-family:Gentium; font-size:10pt; dom-dir:ltr; lang:en-AU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="List" basedon="Body Text" followedby="Footnote Text" props="font-family:Gentium; font-size:10pt; dom-dir:ltr; margin-bottom:6pt; lang:en-AU; line-height:1.0; orphans:0; text-align:left; widows:0"/>
<s type="P" name="Table Normal" followedby="Table Normal" props="font-family:Gentium; font-size:10pt; dom-dir:ltr; lang:en-AU; orphans:0; text-align:left; widows:0"/>
</styles>
<lists>
<l id="1000" parentid="0" type="5" start-value="0" list-delim="%L" list-decimal="NULL"/>
<l id="1028" parentid="0" type="5" start-value="0" list-delim="%L" list-decimal="NULL"/>
</lists>
<pagesize pagetype="A4" orientation="portrait" width="8.267717" height="11.692913" units="in" page-scale="1.000000"/>
<section xid="6" props="page-margin-right:1.2500in; section-restart-value:1; dom-dir:ltr; section-space-after:0.0000in; page-margin-footer:0.5000in; page-margin-header:0.5000in; page-margin-left:1.2500in; page-margin-top:1.0000in; page-margin-bottom:1.0000in">
<p style="Normal" xid="7" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c style="st0" props="lang:-none-; font-size:11pt; font-family:Helvetica; font-weight:bold">Spike</c><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold"> outcomes</c><c props="lang:en-AU; font-size:11pt; font-family:Helvetica"> </c></p>
<p style="Normal" xid="8" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold">Name: </c><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:normal">Will Python/Kivy be able to save XML files?</c></p>
<p style="Normal" xid="9" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold">Goals:</c></p>
<p style="Normal" xid="10" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-style:italic">As in the spike plan</c></p>
<p style="Normal" xid="11" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold">Personnel:</c></p>
<p style="Normal" xid="12" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-style:italic">As in the spike plan</c></p>
<p style="Normal" xid="13" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="14" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold">Technologies, Tools, and Resources used:</c></p>
<p style="Normal" xid="15" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p level="1" listid="1000" parentid="0" style="Normal" xid="16" props="dom-dir:ltr; list-decimal:NULL; margin-left:0.5000in; widows:0; text-indent:-0.3000in; text-align:justify; orphans:0; list-delim:%L; start-value:0; list-style:Bullet List; line-height:1.0; field-font:Liberation Sans"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-style:normal; list-tag:1001"></c><field type="list_label" xid="1" props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal"></field><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal">	xml.etree.elementree documentation from</c><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; list-style:Bullet List; lang:en-AU; color:000000; text-transform:none; text-position:normal; text-decoration:none; bgcolor:transparent; homogeneous:1; font-variant:normal; height:0in; font-size:10pt; font-stretch:normal"> </c><c props="font-family:Helvetica; font-size:11pt">https://docs.python.org/2/library/xml.etree.elementtree.html</c></p>
<p level="1" listid="1000" parentid="0" style="Normal" xid="2" props="dom-dir:ltr; list-decimal:NULL; margin-left:0.5000in; widows:0; text-indent:-0.3000in; text-align:justify; orphans:0; list-delim:%L; start-value:0; list-style:Bullet List; line-height:1.0; field-font:Liberation Sans"><c props="width:0in; list-tag:1002; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; lang:en-AU; font-variant:normal; text-transform:none; text-position:normal; list-style:Bullet List; bgcolor:transparent; font-size:11pt; homogeneous:1; text-decoration:none; height:0in; color:000000; font-stretch:normal"></c><field type="list_label" xid="3" props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal"></field><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal">	Chapter 2 of “</c><c props="font-family:Helvetica; font-size:11pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-AU">Creating Apps in Kivy” by D</c><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; lang:en-AU; font-variant:normal; text-transform:none; color:000000; list-style:Bullet List; bgcolor:transparent; font-size:11pt; homogeneous:1; text-decoration:none; height:0in; text-position:normal; font-stretch:normal">usty Phillips</c></p>
<p level="1" listid="1000" parentid="0" style="Normal" xid="4" props="dom-dir:ltr; list-decimal:NULL; margin-left:0.5000in; widows:0; text-indent:-0.3000in; text-align:justify; orphans:0; list-delim:%L; start-value:0; list-style:Bullet List; line-height:1.0; field-font:Liberation Sans"><c props="width:0in; list-tag:1003; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; lang:en-AU; font-variant:normal; text-transform:none; text-position:normal; list-style:Bullet List; bgcolor:transparent; font-size:11pt; homogeneous:1; text-decoration:none; height:0in; color:000000; font-stretch:normal"></c><field type="list_label" xid="5" props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal"></field><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal">	Chapter 1 of “Kivy: Interactive applications in Python” by Roberto Ulloa</c></p>
<p style="Normal" xid="75" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="76" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold">Tasks undertaken:</c></p>
<p style="Normal" xid="77" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="78" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica">I ended up creating a custom widget which was able to receive text input from a user and save it into an XML file in the same directory. It consists of a Button widget and a TextInput widget split 50/50 over the Kivy screen. On the button click the XML file is created in Python.</c></p>
<p style="Normal" xid="31" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica"></c></p>
<p style="Normal" xid="22" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold">What we found out:</c></p>
<p style="Normal" xid="32" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold"></c></p>
<p level="1" listid="1028" parentid="0" style="Normal" xid="33" props="dom-dir:ltr; list-decimal:NULL; margin-left:0.5000in; widows:0; text-indent:-0.3000in; text-align:justify; orphans:0; list-delim:%L; start-value:0; list-style:Bullet List; line-height:1.0; field-font:Liberation Sans"><c props="font-size:11pt; font-family:Helvetica; list-tag:1029"></c><field type="list_label" xid="42" props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal"></field><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal">	</c><c props="font-family:Helvetica; font-size:11pt">The initial part of the App's subclass name has to coincide with the name of the Kivy file. For example, if the definition of the class is class FooApp(App), then the name of the file must be foo.kv and it must be in the same directory of the main file (the one that executes the App's run() method). It must also all be in lower case. This will save you a lot of time.</c></p>
<p level="1" listid="1028" parentid="0" style="Normal" xid="43" props="dom-dir:ltr; list-decimal:NULL; margin-left:0.5000in; widows:0; text-indent:-0.3000in; text-align:justify; orphans:0; list-delim:%L; start-value:0; list-style:Bullet List; line-height:1.0; field-font:Liberation Sans"><c props="font-size:11pt; font-family:Helvetica; list-tag:1030"></c><field type="list_label" xid="44" props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal"></field><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal">	ObjectProperty() will carry attributes from widgets to be manipulated in Python</c></p>
<p level="1" listid="1028" parentid="0" style="Normal" xid="47" props="dom-dir:ltr; list-decimal:NULL; margin-left:0.5000in; widows:0; text-indent:-0.3000in; text-align:left; orphans:0; list-delim:%L; start-value:0; list-style:Bullet List; line-height:1.0; field-font:Liberation Sans"><c props="width:0in; list-tag:1032; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; lang:en-AU; font-variant:normal; text-transform:none; text-position:normal; list-style:Bullet List; bgcolor:transparent; font-size:11pt; homogeneous:1; text-decoration:none; height:0in; color:000000; font-stretch:normal"></c><field type="list_label" xid="48" props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal"></field><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal">	</c><c props="font-family:Helvetica; font-size:11pt">Kivy is firing events all the time and the the event handler is accessed as a property on the Button object with a prefix of on_ . There are specific types of events for different widgets; for a button, the press event is kicked off by a mouse press or touch event.</c></p>
<p level="1" listid="1028" parentid="0" style="Normal" xid="59" props="dom-dir:ltr; list-decimal:NULL; margin-left:0.5000in; widows:0; text-indent:-0.3000in; text-align:left; orphans:0; list-delim:%L; start-value:0; list-style:Bullet List; line-height:1.0; field-font:Liberation Sans"><c props="font-size:11pt; font-family:Helvetica; list-tag:1038"></c><field type="list_label" xid="60" props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal"></field><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal">	L</c><c props="font-family:Helvetica; font-size:11pt">ayout and graphical information should always go in the KV language file. Logic (the calculations and activities that make up a program) should always go in a Python file. Keeping these two types of information separate will save hours in the long-term maintenance of your app.</c></p>
<p level="1" listid="1028" parentid="0" style="Normal" xid="73" props="dom-dir:ltr; list-decimal:NULL; margin-left:0.5000in; widows:0; text-indent:-0.3000in; text-align:left; orphans:0; list-delim:%L; start-value:0; list-style:Bullet List; line-height:1.0; field-font:Liberation Sans"><c props="font-size:11pt; font-family:Helvetica; list-tag:1045"></c><field type="list_label" xid="74" props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal"></field><c props="width:0in; font-family:Helvetica; display:inline; font-style:normal; font-weight:normal; bgcolor:transparent; lang:en-AU; text-position:normal; text-transform:none; homogeneous:1; color:000000; font-variant:normal; text-decoration:none; font-size:11pt; height:0in; list-style:Bullet List; font-stretch:normal">	The xml.etree.elementree API works as a function of cascading elements from the root. You have to create the elements one by one then add them into the tree.</c></p>
<p style="Normal" xid="40" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="font-family:Helvetica; font-size:11pt"></c></p>
<p style="Normal" xid="24" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"></p>
<p style="Normal" xid="25" props="text-align:justify; line-height:1.0; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold">Open issues/risks:</c></p>
<p style="Body Text" xid="26" props="text-align:justify; line-height:1.0; margin-bottom:6pt; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-style:normal">Using the XPath functions in </c><c props="font-family:Helvetica; font-size:11pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-AU">xml.etree.elementree API</c><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-style:normal"> to add elements is still unknown.</c></p>
<p style="Body Text" xid="28" props="text-align:justify; line-height:1.0; margin-bottom:6pt; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold"></c></p>
<p style="Body Text" xid="79" props="text-align:justify; line-height:1.0; margin-bottom:6pt; dom-dir:ltr; orphans:0; widows:0"><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold"></c><c props="lang:en-AU; font-size:11pt; font-family:Helvetica; font-weight:bold">Recommendations:</c></p>
<p style="Body Text" xid="29" props="text-align:justify; line-height:1.0; margin-bottom:6pt; dom-dir:ltr; orphans:0; widows:0"><c props="font-family:Helvetica; font-size:11pt; color:000000; text-decoration:none; text-position:normal; font-weight:normal; font-style:normal; lang:en-AU">We will have to soft code in the elements of the XML tree for the Turing machine implementation.  So it might be best to implement this as it’s own function to avoid a lot of code duplication. That or manually create a template of the XML file every time a new machine is to be built and use the XPath functions to add in the relevant data.</c></p>
<p xid="30" props="text-align:justify"></p>
</section>
</abiword>
