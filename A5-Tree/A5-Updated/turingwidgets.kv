# File name: turingwidgets.kv
#:kivy 1.7.0
#:import turingwidgets turingwidgets
<DraggableWidget>:
    size_hint: None, None

<StateRep>:
    size: 48,48
    # color: self.r,1,1,1
    # pos_hint: {'center_x':1,'center_y':.5}
    canvas:
        Color:
            rgba: self.r, self.g, self.b, self.a
        PushMatrix
        Ellipse:
            size: 30,30
            pos: 9,9
        Translate:
        PopMatrix
    Label:
        id: _state_label
        text: 'ID:' + str(root.stateName)
    # on_pos: root.reposition()

<Transition1>
    canvas:
        Color:
            rgba: self.r, self.g, self.b, self.a
        Line:
            circle: self.state.center_x-30, self.state.center_y, 20
    Label:
        id: _transition_label
        pos: root.state.center_x + 5, root.state.center_y-50
        text: root.t_label

<Transition2>
    canvas:
        Color:
            rgba: self.r, self.g, self.b, self.a
        Line:
            points: self.state1.center_x, self.state1.center_y,self.state2.center_x, self.state2.center_y
            width: 1
    Label:
        id: _transition_label
        pos: root.state1.center_x + 5, root.state1.center_y-50
        text: root.t_label


<SeenSymPopup>:
    id: _seensym_popup
    size_hint: .5, .5
    auto_dismiss: False
    title: 'Enter Seen Symbol'
    object: None
    TextInput:
        id: user_input_seen
        hint_text: "Enter Seen Symbol for this transition"
        multiline: False
        on_text_validate: _seensym_popup.object = root.get_useful_input(root,user_input_seen)
        on_focus: user_input_seen.background_color=[0.8,1,1,1]

<WriteSymPopup>:
    id: _writesym_popup
    size_hint: .5, .5
    auto_dismiss: False
    title: 'Enter Write Symbol for this transition'
    TextInput:
        id: user_input_write
        hint_text: "Enter write Symbol for this transition here"
        multiline: False
        on_text_validate: root.get_useful_input(root,user_input_write)
        on_focus: user_input_write.background_color=[0.8,1,1,1]

<NewStatePopup>:
    id: _newstate_popup
    size_hint: .5, .5
    auto_dismiss: False
    title: 'Enter New State for this transition'
    TextInput:
        id: user_input_newState
        hint_text: "Enter the new state for this transition \n( Use The State ID's) "
        multiline: False
        on_text_validate: root.get_useful_input(root,user_input_newState)
        on_focus: user_input_newState.background_color=[0.8,1,1,1]

<MovePopup>:
    id: _move_popup
    size_hint: .5, .5
    auto_dismiss: False
    title: 'Enter direction to move tape (Either L or R) for this transition'
    TextInput:
        hint_text: "Enter the direction for movement \n(L = Left or R = Right)"
        id: user_input_move
        multiline: False
        on_text_validate: root.get_useful_input(root,user_input_move)
        on_focus: user_input_move.background_color=[0.8,1,1,1]

# Color(*get_color_from_hex('ffe354'))
# Ellipse(pos=(touch_x - 20, touch_y + 20), size=(40,40))
# Line(circle=(touch_x, touch_y + 40, 30, 0, 360), width=2)
#
# label = Label(text='ID: {}\nX: {} | Y: {}'.format(touch.point_id, touch_x, touch_y))
# label.center_x = touch_x + 80
# label.center_y = touch_y + 80
# label.color = (1,1,1)
